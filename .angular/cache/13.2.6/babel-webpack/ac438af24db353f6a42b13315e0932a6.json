{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/db.service\";\nimport * as i2 from \"src/app/service/joblist.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction MunkaListaComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", col_r1.title, \" \");\n  }\n}\n/**\n* @title Toolbar\n*/\n\n\nexport class MunkaListaComponent {\n  constructor(dbservice, joblService) {\n    this.dbservice = dbservice;\n    this.joblService = joblService;\n    this.list$ = this.joblService.get();\n    this.columns = [{\n      key: 'NOVNEV',\n      title: 'noveny_nev'\n    }];\n  }\n\n  ngOnInit() {\n    let v = this.joblService.get();\n    let piped = v.pipe();\n    piped.forEach(x => {\n      console.log(x[1]);\n    });\n    console.log(\"munkalista component\"); //const base = this.http.post('/login', user)\n    //settings\n    //https://napster2210.github.io/ngx-spinner/\n  }\n\n}\n\nMunkaListaComponent.ɵfac = function MunkaListaComponent_Factory(t) {\n  return new (t || MunkaListaComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService), i0.ɵɵdirectiveInject(i2.JoblistService));\n};\n\nMunkaListaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MunkaListaComponent,\n  selectors: [[\"munkalista-comp\"]],\n  decls: 8,\n  vars: 6,\n  consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function MunkaListaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\");\n      i0.ɵɵtemplate(3, MunkaListaComponent_th_3_Template, 2, 1, \"th\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"tbody\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5);\n      i0.ɵɵpipe(6, \"json\");\n      i0.ɵɵpipe(7, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.columns);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 2, i0.ɵɵpipeBind1(7, 4, ctx.list$)), \"\");\n    }\n  },\n  directives: [i3.NgForOf],\n  pipes: [i3.JsonPipe, i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/home/fhsz/mean_pwa/client/src/app/central/central-components/munkalista/munkalista.component.ts"],"names":["i0","i1","i2","i3","MunkaListaComponent_th_3_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","col_r1","$implicit","ɵɵadvance","ɵɵtextInterpolate1","title","MunkaListaComponent","constructor","dbservice","joblService","list$","get","columns","key","ngOnInit","v","piped","pipe","forEach","x","console","log","ɵfac","MunkaListaComponent_Factory","t","ɵɵdirectiveInject","DatabaseService","JoblistService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","MunkaListaComponent_Template","ɵɵtemplate","ɵɵelement","ɵɵpipe","ɵɵproperty","ɵɵpipeBind1","directives","NgForOf","pipes","JsonPipe","AsyncPipe","encapsulation"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iCAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;;AACA,SAASC,iCAAT,CAA2CC,EAA3C,EAA+CC,GAA/C,EAAoD;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AAC9DL,IAAAA,EAAE,CAACO,cAAH,CAAkB,CAAlB,EAAqB,IAArB;AACAP,IAAAA,EAAE,CAACQ,MAAH,CAAU,CAAV;AACAR,IAAAA,EAAE,CAACS,YAAH;AACH;;AAAC,MAAIJ,EAAE,GAAG,CAAT,EAAY;AACV,UAAMK,MAAM,GAAGJ,GAAG,CAACK,SAAnB;AACAX,IAAAA,EAAE,CAACY,SAAH,CAAa,CAAb;AACAZ,IAAAA,EAAE,CAACa,kBAAH,CAAsB,GAAtB,EAA2BH,MAAM,CAACI,KAAlC,EAAyC,GAAzC;AACH;AAAE;AACH;AACA;AACA;;;AACA,OAAO,MAAMC,mBAAN,CAA0B;AAC7BC,EAAAA,WAAW,CAACC,SAAD,EAAYC,WAAZ,EAAyB;AAChC,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,KAAL,GAAa,KAAKD,WAAL,CAAiBE,GAAjB,EAAb;AACA,SAAKC,OAAL,GAAe,CACX;AAAEC,MAAAA,GAAG,EAAE,QAAP;AAAiBR,MAAAA,KAAK,EAAE;AAAxB,KADW,CAAf;AAGH;;AACDS,EAAAA,QAAQ,GAAG;AACP,QAAIC,CAAC,GAAG,KAAKN,WAAL,CAAiBE,GAAjB,EAAR;AACA,QAAIK,KAAK,GAAGD,CAAC,CAACE,IAAF,EAAZ;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAeC,CAAD,IAAO;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAAC,CAAD,CAAb;AACH,KAFD;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EANO,CAOP;AACA;AACA;AACH;;AAnB4B;;AAqBjCf,mBAAmB,CAACgB,IAApB,GAA2B,SAASC,2BAAT,CAAqCC,CAArC,EAAwC;AAAE,SAAO,KAAKA,CAAC,IAAIlB,mBAAV,EAA+Bf,EAAE,CAACkC,iBAAH,CAAqBjC,EAAE,CAACkC,eAAxB,CAA/B,EAAyEnC,EAAE,CAACkC,iBAAH,CAAqBhC,EAAE,CAACkC,cAAxB,CAAzE,CAAP;AAA2H,CAAhM;;AACArB,mBAAmB,CAACsB,IAApB,GAA2B,aAAcrC,EAAE,CAACsC,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAExB,mBAAR;AAA6ByB,EAAAA,SAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAxC;AAA+DC,EAAAA,KAAK,EAAE,CAAtE;AAAyEC,EAAAA,IAAI,EAAE,CAA/E;AAAkFC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,OAAJ,EAAa,eAAb,CAAD,EAAgC,CAAC,CAAD,EAAI,OAAJ,EAAa,SAAb,CAAhC,CAA1F;AAAoJC,EAAAA,QAAQ,EAAE,SAASC,4BAAT,CAAsCxC,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACjRL,MAAAA,EAAE,CAACO,cAAH,CAAkB,CAAlB,EAAqB,OAArB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,OAApC,EAA6C,CAA7C,EAAgD,IAAhD;AACAP,MAAAA,EAAE,CAAC8C,UAAH,CAAc,CAAd,EAAiB1C,iCAAjB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,IAA1D,EAAgE,CAAhE;AACAJ,MAAAA,EAAE,CAACS,YAAH;AACAT,MAAAA,EAAE,CAAC+C,SAAH,CAAa,CAAb,EAAgB,OAAhB;AACA/C,MAAAA,EAAE,CAACS,YAAH;AACAT,MAAAA,EAAE,CAACQ,MAAH,CAAU,CAAV;AACAR,MAAAA,EAAE,CAACgD,MAAH,CAAU,CAAV,EAAa,MAAb;AACAhD,MAAAA,EAAE,CAACgD,MAAH,CAAU,CAAV,EAAa,OAAb;AACH;;AAAC,QAAI3C,EAAE,GAAG,CAAT,EAAY;AACVL,MAAAA,EAAE,CAACY,SAAH,CAAa,CAAb;AACAZ,MAAAA,EAAE,CAACiD,UAAH,CAAc,SAAd,EAAyB3C,GAAG,CAACe,OAA7B;AACArB,MAAAA,EAAE,CAACY,SAAH,CAAa,CAAb;AACAZ,MAAAA,EAAE,CAACa,kBAAH,CAAsB,GAAtB,EAA2Bb,EAAE,CAACkD,WAAH,CAAe,CAAf,EAAkB,CAAlB,EAAqBlD,EAAE,CAACkD,WAAH,CAAe,CAAf,EAAkB,CAAlB,EAAqB5C,GAAG,CAACa,KAAzB,CAArB,CAA3B,EAAkF,EAAlF;AACH;AAAE,GAduD;AAcrDgC,EAAAA,UAAU,EAAE,CAAChD,EAAE,CAACiD,OAAJ,CAdyC;AAc3BC,EAAAA,KAAK,EAAE,CAAClD,EAAE,CAACmD,QAAJ,EAAcnD,EAAE,CAACoD,SAAjB,CAdoB;AAcSC,EAAAA,aAAa,EAAE;AAdxB,CAArB,CAAzC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/db.service\";\nimport * as i2 from \"src/app/service/joblist.service\";\nimport * as i3 from \"@angular/common\";\nfunction MunkaListaComponent_th_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const col_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", col_r1.title, \" \");\n} }\n/**\n* @title Toolbar\n*/\nexport class MunkaListaComponent {\n    constructor(dbservice, joblService) {\n        this.dbservice = dbservice;\n        this.joblService = joblService;\n        this.list$ = this.joblService.get();\n        this.columns = [\n            { key: 'NOVNEV', title: 'noveny_nev' },\n        ];\n    }\n    ngOnInit() {\n        let v = this.joblService.get();\n        let piped = v.pipe();\n        piped.forEach((x) => {\n            console.log(x[1]);\n        });\n        console.log(\"munkalista component\");\n        //const base = this.http.post('/login', user)\n        //settings\n        //https://napster2210.github.io/ngx-spinner/\n    }\n}\nMunkaListaComponent.ɵfac = function MunkaListaComponent_Factory(t) { return new (t || MunkaListaComponent)(i0.ɵɵdirectiveInject(i1.DatabaseService), i0.ɵɵdirectiveInject(i2.JoblistService)); };\nMunkaListaComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: MunkaListaComponent, selectors: [[\"munkalista-comp\"]], decls: 8, vars: 6, consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]], template: function MunkaListaComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\");\n        i0.ɵɵtemplate(3, MunkaListaComponent_th_3_Template, 2, 1, \"th\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(4, \"tbody\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"json\");\n        i0.ɵɵpipe(7, \"async\");\n    } if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.columns);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 2, i0.ɵɵpipeBind1(7, 4, ctx.list$)), \"\");\n    } }, directives: [i3.NgForOf], pipes: [i3.JsonPipe, i3.AsyncPipe], encapsulation: 2 });\n"]},"metadata":{},"sourceType":"module"}